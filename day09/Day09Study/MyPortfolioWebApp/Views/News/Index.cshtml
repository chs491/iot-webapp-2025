@model IEnumerable<MyPortfolioWebApp.Models.News>

@{
    // ViewData["Title"] = "Index";

}
@{
    // 컨트롤러 변수값이 바로 사용할 수 없음
    // ViewBag, ViewData, TempData로 전달
    var startPage = ViewBag.StartPage;
    var endPage = ViewBag.EndPage;
    var page = ViewBag.Page;
    var totalPage = ViewBag.TotalPage;
}

<partial name="_Notification" />

<section id="news" class="section">
    <div class="container section-title" data-aos="fade-up">
        <h2>News</h2>
        <p>Lorem ipsum dalat sit amet.</p>        
    </div>

    <div class="container" data-aos="fade-up" data-aos-delay="100">
        <p>
            <a asp-controller="News" asp-action="Create"
            class="btn btn-sm btn-success btn-kelly">Create</a>
        </p>

            
        <table class="board-table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Id)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Writer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.PostDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ReadCount)
                    </th>                   
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="content-center">
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td class="content-center">
                            @Html.DisplayFor(modelItem => item.Writer)
                        </td>
                        <td>
                            <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
                        </td>
                        <td class="content-center">
                            @Html.DisplayFor(modelItem => item.PostDate)
                        </td>
                        <td class="content-center">
                            @Html.DisplayFor(modelItem => item.ReadCount)
                        </td>                        
                    </tr>
                }
            </tbody>
        </table>

        <div class="text-center mt-3">
            <ul class="in">
                <ul class="pagination-sm justify-content-center">
                    @if (page > 1) // 첫페이지 버튼
                    {
                        <li class="page-item"><a href="?page=1" class="page-link">≪</a></li>
                    }

                    @if (page > 1) // 이전 페이지 버튼
                    {
                        <li class="page-item"><a href="?page=@(page-1)" class="page-link">＜</a></li>
                    }


                    @for (var pcount = startPage; pcount <= endPage; pcount++)
                    {
                        if (pcount == page)                       
                        {
                            <li class="page-item"><a href="?page=@pcount" class="page-link active disabled">@pcount</a></li>
                        }
                        else 
                        {
                            <li class="page-item"><a href="?page=@pcount" class="page-link">@pcount</a></li>
                        }
                    }

                    @if (page < totalPage)
                    {
                        <li class="page-item"><a href="?page=@(page + 1)" class="page-link">＞</a></li>
                    }

                    @if (page != totalPage)
                    {
                        <li class="page-item"><a href="?page=@totalPage" class="page-link">≫</a></li>
                    }
                </ul>
            </ul>
        </div>
    

</section>
